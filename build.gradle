buildscript{
	ext{
		springBootVersion = '2.6.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}

}


plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}





group = 'com.somosbooking'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.postgresql:postgresql:42.3.3'
	testImplementation 'org.mockito:mockito-core:4.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task stage(dependsOn: ['bootJar'])

tasks.stage.doLast() {
  delete fileTree(dir: "build/distributions")
  delete fileTree(dir: "build/assetCompile")
  delete fileTree(dir: "build/distributions")
  delete fileTree(dir: "build/libs", exclude: "*.jar") //delete everything except jar file inside build folder
}

build.mustRunAfter clean //First clean then build to avoid cache issues etc

gradle.taskGraph.whenReady {
  taskGraph ->
    if (taskGraph.hasTask(stage)) { //Don't run test on heroku 
      test.enabled = false
    }
}

bootJar { //Exclude test files when pack boot jar file
  enabled = true
  classifier = 'boot'
  exclude "test/**"
  exclude "test/**/**"
}


tasks.named('test') {
	useJUnitPlatform()
}

